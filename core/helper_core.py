
def sample_from_histogram(hist, bins, num = 1):
    """
    A function to sample data from a given histogram generated by numpy for example.
    :param hist: histogram returned by numpy
    :param bins: bins returned by numpy
    :param num: number of values to sample
    :return: sampled values
    """
    bin_midpoints = bins[:-1] + np.diff(bins)/2
    cdf = np.cumsum(hist)
    cdf = cdf / cdf[-1]
    values = np.random.rand(num)
    value_bins = np.searchsorted(cdf, values)
    random_from_cdf = bin_midpoints[value_bins]
    return random_from_cdf


def get_next_day(day, dict_profiles):
    # print(day)
    day_next = 20
    prof_key = 'Not found'
    for profile_key in dict_profiles.keys():
        if int(dict_profiles[profile_key].day) > int(day):
            if dict_profiles[profile_key].day < day_next :
                day_next = dict_profiles[profile_key].day
                prof_key = profile_key
                #print('day next {}'.format(day_next))
    return prof_key

def get_last_day(dict_profiles):
    # print(day)
    day_next = 0
    prof_key = 'Not found'
    for profile_key in dict_profiles.keys():
        if dict_profiles[profile_key].day > day_next :
            day_next = dict_profiles[profile_key].day
            prof_key = profile_key
    return prof_key

def get_cycle_by_key(cycles, key):
    '''
    :param patients: list of cycles
    :param key: key of the cycle to find
    :return: cycle with the given key
    '''
    for cycle in cycles:
        if cycle.key == key:
            return cycle